var express = require('express');
var router = express.Router();
const axios = require('axios');
const FormData = require('form-data');
const formidable = require('formidable');
const fs = require('fs');

//Routing for pages

router.get('/', async function(req, res) {
    let loggedUser = req.user != null ? true : false;
    
    if(!loggedUser){
        res.render('common/error', { status:  401, message: "You need to login to access this service", loggedUser: loggedUser });
        return;
    }

    var data = { status: parseInt(req.query.status) || 200, error: "Missing files" }
    res.render('antimalware/antimalware_upload', { data: data, loggedUser: loggedUser});
})

router.post('/analyze', async function(req, res) {

    let loggedUser = req.user != null ? true : false;

    if(!loggedUser){
        res.render('common/error', { status:  401, message: "You need to login to access this service", loggedUser: loggedUser });
        return;
    }

    //forward the request to API
    var data = {};

    const formdata = new FormData();

    let form = new formidable.IncomingForm();

    form.parse(req, async function (error, fields, files) {

        if(error){
            console.log(error)
            res.redirect('/antimalware?status=404')

        } else if(!isEmpty(files)){
            let filePath = files.filetoupload.filepath;
            let fileName = files.filetoupload.originalFilename;
            let url = req.protocol + '://' + req.get('host') + '/api/antimalware/analyze';

            if(fileName != ""){
                const file = fs.createReadStream(filePath);
                formdata.append('filetoupload', file, fileName);

                await axios.post(url, formdata, {
                    maxContentLength: Infinity,
                    maxBodyLength: Infinity,
                    headers: {
                        'Content-Type': 'multipart/form-data; boundary=' + formdata.getBoundary()
                    }
                })
                .then(res => data = res.data)
                .catch(err => { data['status'] = err.response.status; data['error'] = err.response.statusText })
                
                res.render('antimalware/antimalware_result', { data: data, loggedUser: loggedUser })

            } else{
                res.redirect('/antimalware?status=404')
            }
        } else {
            res.redirect('/antimalware?status=404')
        }
    });
})

function isEmpty(obj) {
    return Object.keys(obj).length === 0 || obj == undefined;
}

module.exports = router