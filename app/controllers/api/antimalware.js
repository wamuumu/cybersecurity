//CONTROLLER PER LA GESTIONE DEI SERVIZI ANTIMALWARES

const express = require('express');
const router = express.Router();
const formidable = require('formidable');
const config = require('../../../config');
const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');

/*
Per virus-total bisogna includere l'header x-apikey in ogni richiesta
Le risposte sono in formato JSON

Limiti:
	Request rate:	4 lookups / min
	Daily quota:	500 lookups / day
	Monthly quota:	15.50 K lookups / month
*/


//File upload
router.post('/', async function(req, res){

	let form = new formidable.IncomingForm();

	form.parse(req, async function (error, fields, files) {
		if(error){
			res.status(400).json({status: 400, message: error}) 
		} else {
			var data = [];
			var fileID = -1;
			let fileSize = (files.filetoupload._writeStream.bytesWritten / Math.pow(10,6)).toFixed(3); //From Bytes to MegaBytes
			let filePath = files.filetoupload.filepath;
			let fileName = files.filetoupload.originalFilename;

			console.log("Name: " + fileName);
			console.log("Path: " + filePath);
			console.log("Size: " + fileSize + " MB");

			var link = 'https://www.virustotal.com/api/v3/files';

			if(fileSize <= 32){
				//Upload Standard
				console.log("[Standard Upload]")

				data = await uploadFile(link, filePath, fileName);

			} else if(fileSize > 32 && fileSize <= 500) {
				//Get Upload Link (MAX 500 MB)
				console.log("[Upload With Link]")

				var status = 200, text = "";

				const options = {
				  	method: 'GET',
				  	url: link + '/upload_url',
				  	headers: {Accept: 'application/json', 'x-apikey': config.VIRUS_TOTAL_KEY}
				};

				await axios.request(options)
				.then(res => link = res.data.data)
				.catch(err => { status = err.response.status; text = err.response.statusText });

				if(status == 200)
					data = await uploadFile(link, filePath, fileName);
				else
					res.status(status).json({status: status, message: text});
			} else {
				res.status(413).json({status: 413, message: "File too large to be processed"});
			}

			fileID = data[0];

			if(fileID == -1 || data[1] != 200)
				res.status(data[1]).json({status: data[1], message: data[2]});
			else{
				console.log("FileID: " + fileID);
				res.status(200).json({status: 200, fileID: fileID});
			}
		}
    });
})

/* 
	
	TO ANALYZE: 

	const sdk = require('api')('@virustotal/v3.0#qslw1jl4hdir5j');

	sdk.analysis({
	  id: 'MWIzZTk5YzFhOGU4ZGExYjM2YTVhYjY3Y2NlNWQ4ODM6MTY1NjM1ODE5NQ==',
	  'x-apikey': '068a0ddcce6c7fe3aa59c4da3051b9a9dc0060078d19482af3f1df8ba1b8316a'
	})
	.then(res => console.log(res))
	.catch(err => console.error(err));

*/

async function uploadFile(link, filePath, fileName){

	console.log("Uploading " + fileName +" with: " + link);

    var id = -1, status = 200, text = "";

	const formdata = new FormData()
	formdata.append('file', fs.createReadStream(filePath));

	const options = {
		maxContentLength: Infinity,
    	maxBodyLength: Infinity,
	  	headers: {
		    Accept: 'application/json',
		    'x-apikey': config.VIRUS_TOTAL_KEY,
		    'Content-Type': 'multipart/form-data; boundary=' + formdata.getBoundary()
	  	}
	}

	await axios.post(link, formdata, options)
	.then(res => id = res.data.data.id)
	.catch(err => { status = err.response.status; text = err.response.statusText })

	return [id, status, text];
}

module.exports = router